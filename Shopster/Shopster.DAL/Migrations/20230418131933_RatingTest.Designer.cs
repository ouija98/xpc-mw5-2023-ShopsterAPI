// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopster.Shopster.DAL.AppDbContext;

#nullable disable

namespace Shopster.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230418131933_RatingTest")]
    partial class RatingTest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shopster.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbe43847-0ee3-4684-89e8-cdcfac9763bd"),
                            Name = "ctg1"
                        },
                        new
                        {
                            Id = new Guid("5546c821-91c9-4028-87f0-8cb91f74332b"),
                            Name = "ctg22"
                        },
                        new
                        {
                            Id = new Guid("5a6fd43a-e5a2-41cf-bd46-88dc541640bc"),
                            Name = "ctg3"
                        },
                        new
                        {
                            Id = new Guid("636d3b34-27a0-4b48-97a3-647a1d2b96de"),
                            Name = "ctg5"
                        },
                        new
                        {
                            Id = new Guid("fe4da7c0-f5ae-4537-a770-b39374483b9b"),
                            Name = "ctg6"
                        });
                });

            modelBuilder.Entity("Shopster.Entities.CommodityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Commodity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec0e37f6-707d-4719-9cd7-0f86aed9f9db"),
                            CategoryId = new Guid("fbe43847-0ee3-4684-89e8-cdcfac9763bd"),
                            Description = "desc1",
                            ManufacturerId = new Guid("204d7eab-ef30-4226-a231-ef29626e0770"),
                            Name = "cmd1",
                            Picture = "picture.jpg",
                            Price = 10m,
                            Quantity = 2,
                            Weight = 15f
                        });
                });

            modelBuilder.Entity("Shopster.Entities.ManufacturerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1fa987c0-bfb5-4d1f-b7cd-cb114cec59b8"),
                            CountryOfOrigin = "CZ",
                            Description = "desc1",
                            Logo = "logo1.png",
                            Name = "manu1"
                        },
                        new
                        {
                            Id = new Guid("204d7eab-ef30-4226-a231-ef29626e0770"),
                            CountryOfOrigin = "CZ",
                            Description = "desc2",
                            Logo = "logo2.png",
                            Name = "manu2"
                        },
                        new
                        {
                            Id = new Guid("117af01b-ee1c-4a9c-87e5-9297368e95fb"),
                            CountryOfOrigin = "CZ",
                            Description = "desc3",
                            Logo = "logo3.png",
                            Name = "manu3"
                        },
                        new
                        {
                            Id = new Guid("22955e6d-82a9-498a-a00a-f90a5a9148df"),
                            CountryOfOrigin = "CZ",
                            Description = "desc4",
                            Logo = "logo4.png",
                            Name = "manu4"
                        });
                });

            modelBuilder.Entity("Shopster.Entities.RatingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommodityEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommodityEntityId");

                    b.ToTable("Rating");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82ea037c-128e-4583-953e-4e13466b6dd9"),
                            CommodityEntityId = new Guid("ec0e37f6-707d-4719-9cd7-0f86aed9f9db"),
                            Description = "desc1",
                            Stars = 1,
                            Title = "title1"
                        });
                });

            modelBuilder.Entity("Shopster.Entities.CommodityEntity", b =>
                {
                    b.HasOne("Shopster.Entities.CategoryEntity", "Category")
                        .WithMany("Commodities")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopster.Entities.ManufacturerEntity", "Manufacturer")
                        .WithMany("Commodities")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Shopster.Entities.RatingEntity", b =>
                {
                    b.HasOne("Shopster.Entities.CommodityEntity", "Commodity")
                        .WithMany("Ratings")
                        .HasForeignKey("CommodityEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity");
                });

            modelBuilder.Entity("Shopster.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Commodities");
                });

            modelBuilder.Entity("Shopster.Entities.CommodityEntity", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Shopster.Entities.ManufacturerEntity", b =>
                {
                    b.Navigation("Commodities");
                });
#pragma warning restore 612, 618
        }
    }
}
